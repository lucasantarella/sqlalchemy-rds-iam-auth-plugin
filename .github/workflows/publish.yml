name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/

  test-install:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        sqlalchemy-version: ["1.4.x", "2.0.x"]
        exclude:
          - python-version: "3.12"
            sqlalchemy-version: "1.4.x"

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Install package from wheel
        run: |
          pip install dist/*.whl
          pip install "sqlalchemy==${{ matrix.sqlalchemy-version == '1.4.x' && '1.4.*' || '2.0.*' }}"

      - name: Test import
        run: |
          python -c "from sqlalchemy_rds_iam import RDSIAMAuthPlugin; print('Import successful')"

  publish-test-pypi:
    if: github.event.inputs.test_pypi == 'true' || github.event_name == 'workflow_dispatch'
    needs: [build, test-install]
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://test.pypi.org/p/sqlalchemy-rds-iam-auth-plugin
    permissions:
      id-token: write

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build, test-install]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/sqlalchemy-rds-iam-auth-plugin
    permissions:
      id-token: write

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
